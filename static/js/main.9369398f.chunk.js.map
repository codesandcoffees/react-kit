{"version":3,"sources":["sagaDucks/counter/counter.js","components/Button/Button.js","components/Input/Input.js","components/Loading/Loading.js","components/Navbar/Navbar.js","components/index.js","routes/HomeLayout/HomeLayout.js","routes/loadableCons.js","routes/index.js","sagaDucks/reducers.js","sagaDucks/counter/counterSagas.js","sagaDucks/sagas.js","store.js","serviceWorker.js","index.js","App.js"],"names":["types","INCREASE_REQUEST","INCREASE_SUCCESS","DECREASE_REQUEST","DECREASE_SUCCESS","RESET_TOTAL","initialState","total","__webpack_exports__","state","arguments","length","undefined","action","value","val","type","Object","_home_travis_build_codesandcoffees_react_kit_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","actions","counterIncrease","counterDecrease","counterReset","Button","styled","button","_templateObject","ButtonComponent","_this$props","this","props","onClick","label","react_default","a","createElement","React","Component","InputComponent","onChange","min","LoadingComponent","isLoading","error","timedOut","defaultProps","Divider","li","Navbar_templateObject","List","ul","_templateObject2","NavbarComponent","Link","to","__webpack_require__","d","Button_Button","Input","Loading","Navbar","Layout","div","HomeLayout","children","HomeLayout_Layout","components","fakeDelay","ms","Promise","resolve","setTimeout","loadableCons","Counter","Loadable","loader","then","e","bind","loading","About","AppRoute","_ref","component","layout","rest","objectWithoutProperties","Route","assign","render","routes","HashRouter","Switch","routes_AppRoute","exact","path","combineReducers","counter","willIncrease","willDecrease","regenerator_default","wrap","_context","prev","next","put","counterTypes","stop","_marked","_context2","_marked2","counterSagas","takeLatest","mySaga","all","toConsumableArray","sagas_marked","sagaMiddleware","createSagaMiddleware","createStore","reducer","applyMiddleware","run","Boolean","window","location","hostname","match","ReactDOM","es","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9369398f.chunk.js","sourcesContent":["/**\n * General COMMON State\n */\n\nexport const types = {\n  INCREASE_REQUEST: 'COUNTER/INCREASE_REQUEST',\n  INCREASE_SUCCESS: 'COUNTER/INCREASE_SUCCESS',\n  DECREASE_REQUEST: 'COUNTER/DECREASE_REQUEST',\n  DECREASE_SUCCESS: 'COUTER/DECREASE_SUCCESS',\n  RESET_TOTAL: 'COUNTER/RESET_TOTAL',\n};\n\nexport const initialState = {\n  total: 0,\n};\n\nexport default (state = initialState, action) => {\n  const value = (action && action.val) ? action.val : 1;\n  switch (action.type) {\n    case types.INCREASE_SUCCESS:\n      return { ...state, total: state.total + value };\n    case types.DECREASE_SUCCESS:\n      return { ...state, total: state.total - value };\n    case types.RESET_TOTAL:\n      return { ...state, total: 0 };\n    default:\n      return state;\n  }\n};\n\nexport const actions = {\n  counterIncrease: val => ({ type: types.INCREASE_REQUEST, val }),\n  counterDecrease: val => ({ type: types.DECREASE_REQUEST, val }),\n  counterReset: () => ({ type: types.RESET_TOTAL }),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  background-color: #4CAF50;\n  border: none;\n  color: white;\n  padding: 2px 5px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n`;\n\nclass ButtonComponent extends React.Component {\n  render() {\n    const { onClick, label } = this.props;\n    return (\n      <Button onClick={onClick}>\n        {label}\n      </Button>\n    );\n  }\n}\n\nButtonComponent.propTypes = {\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ButtonComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass InputComponent extends React.Component {\n  render() {\n    const {\n      type, value, onChange, min,\n    } = this.props;\n    return (\n      <input\n        type={type}\n        value={value}\n        onChange={onChange}\n        min={min}\n      />\n    );\n  }\n}\n\nInputComponent.propTypes = {\n  type: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  min: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default InputComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LoadingComponent = (props) => {\n  const { isLoading, error, timedOut } = props;\n  if (isLoading) {\n    return (\n      <div>\n        Loading...\n      </div>\n    );\n  } if (error) {\n    return (\n      <div>\n        Something went wrong...\n      </div>\n    );\n  } if (timedOut) {\n    return (\n      <div>\n        Request timed out...\n        {' '}\n      </div>\n    );\n  }\n  return null;\n};\n\nLoadingComponent.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  error: PropTypes.bool,\n  timedOut: PropTypes.bool.isRequired,\n};\n\nLoadingComponent.defaultProps = {\n  error: null,\n};\n\nexport default LoadingComponent;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Divider = styled.li`\n  margin: 0px 5px;\n`;\n\nconst List = styled.ul`\n  list-style: none;\n  padding: 0px;\n  display: inline-flex;\n`;\n\nclass NavbarComponent extends React.Component {\n  render() {\n    return (\n      <div>\n        <List>\n          <li>\n            <Link to=\"/\">\n              Home\n            </Link>\n          </li>\n          <Divider>\n            |\n          </Divider>\n          <li>\n            <Link to=\"about\">\n              About\n            </Link>\n          </li>\n        </List>\n      </div>\n    );\n  }\n}\n\nexport default NavbarComponent;\n","export { default as Button } from './Button/Button';\nexport { default as Input } from './Input/Input';\nexport { default as Loading } from './Loading/Loading';\nexport { default as Navbar } from './Navbar/Navbar';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { Navbar } from '../../components';\n\nconst Layout = styled.div`\n  display: inherit;\n  text-align: center;\n`;\n\nclass HomeLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <Layout>\n        <Navbar />\n        {children}\n      </Layout>\n    );\n  }\n}\n\nHomeLayout.propTypes = {\n  children: PropTypes.object.isRequired,\n};\n\nexport default HomeLayout;\n","import Loadable from 'react-loadable';\n\nimport { Loading } from '../components';\n\nconst fakeDelay = ms => new Promise((resolve) => {\n  setTimeout(resolve, ms);\n});\n\nexport default {\n  Counter: Loadable({\n    loader: () => fakeDelay(1000).then(() => import('../containers/Counter/Counter')),\n    loading: Loading,\n  }),\n\n  About: Loadable({\n    loader: () => fakeDelay(1000).then(() => import('../containers/About/About')),\n    loading: Loading,\n  }),\n};\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport HomeLayout from './HomeLayout/HomeLayout';\nimport loadableCons from './loadableCons';\n\nconst AppRoute = ({ component: Component, layout: Layout, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (\n      <Layout>\n        <Component {...props} />\n      </Layout>\n    )}\n  />\n);\n\nexport default () => (\n  <HashRouter>\n    <Switch>\n      <AppRoute exact path=\"/\" layout={HomeLayout} component={loadableCons.Counter} />\n      <AppRoute exact path=\"/about\" layout={HomeLayout} component={loadableCons.About} />\n    </Switch>\n  </HashRouter>\n);\n\nAppRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n  layout: PropTypes.func.isRequired,\n};\n","import { combineReducers } from 'redux';\n\nimport counter from './counter/counter';\n\nexport default combineReducers({\n  counter,\n});\n","import { put, takeLatest } from 'redux-saga/effects';\n\nimport { types as counterTypes } from './counter';\n\nfunction* willIncrease(action) {\n  const val = (action && action.val) ? action.val : null;\n  yield put({\n    type: counterTypes.INCREASE_SUCCESS,\n    val,\n  });\n}\n\nfunction* willDecrease(action) {\n  const val = (action && action.val) ? action.val : null;\n  yield put({\n    type: counterTypes.DECREASE_SUCCESS,\n    val,\n  });\n}\n\nconst counterSagas = [\n  takeLatest(counterTypes.INCREASE_REQUEST, willIncrease),\n  takeLatest(counterTypes.DECREASE_REQUEST, willDecrease),\n];\n\nexport default counterSagas;\n","import { all } from 'redux-saga/effects';\n\nimport counterSagas from './counter/counterSagas';\n\nexport default function* mySaga() {\n  yield all([\n    ...counterSagas,\n  ]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducer from './sagaDucks/reducers';\nimport mySaga from './sagaDucks/sagas';\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\n// mount it on the Store\nexport default createStore(\n  reducer,\n  applyMiddleware(sagaMiddleware),\n);\n\n// then run the saga\nsagaMiddleware.run(mySaga);\n\n// render the application\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport Routes from './routes';\nimport store from './store';\nimport './App.css';\n\nexport default () => (\n  <Provider store={store}>\n    <Routes />\n  </Provider>\n);\n"],"sourceRoot":""}